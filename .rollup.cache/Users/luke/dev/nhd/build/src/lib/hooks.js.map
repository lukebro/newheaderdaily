{"version":3,"file":"hooks.js","sourceRoot":"","sources":["../../../src/lib/hooks.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,MAAM,MAAM,aAAa,CAAC;AACjC,OAAO,MAAM,MAAM,KAAK,CAAC;AAGzB,MAAM,CAAC,IAAM,OAAO,GAAG,UAAO,GAAW;;;;oBACzB,qBAAM,KAAK,CAAC,GAAG,CAAC,EAAA;;gBAAtB,GAAG,GAAG,SAAgB;gBAE5B,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE;oBACT,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;iBACjE;gBAED,sBAAO,GAAG,CAAC,IAAI,EAAE,EAAC;;;KACrB,CAAC;AAEF,MAAM,UAAU,OAAO,CAAC,EAMlB;QANkB,qBAMpB,EAAE,KAAA,EALF,UAAU,gBAAA,EACV,eAAe,qBAAA;IAKT,IAAA,KAA0B,MAAM,CAAO,WAAW,CAAC,EAAjD,IAAI,UAAA,EAAE,KAAK,WAAA,EAAE,MAAM,YAA8B,CAAC;IAC1D,IAAM,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;IAChC,IAAM,SAAS,GAAY,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC;IAEzD,SAAS,CAAC;QACN,IAAI,CAAC,UAAU,IAAI,OAAO;YAAE,OAAO;QACnC;QACI,4DAA4D;QAC5D,CAAC,UAAU,IAAI,CAAC,eAAe,IAAI,SAAS,CAAC;YAC7C,iEAAiE;YACjE,CAAC,eAAe,IAAI,CAAC,SAAS,CAAC,EACjC;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3B;IACL,CAAC,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;IAEtD,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,WAAA,EAAE,OAAO,SAAA,EAAE,MAAM,QAAA,EAAE,CAAC;AACtD,CAAC","sourcesContent":["import { useEffect } from 'react';\nimport Router from 'next/router';\nimport useSWR from 'swr';\nimport type { User } from 'src/types';\n\nexport const fetcher = async (url: string) => {\n    const res = await fetch(url);\n\n    if (!res.ok) {\n        throw new Error('An error occurred while fetching the data.');\n    }\n\n    return res.json();\n};\n\nexport function useUser({\n    redirectTo,\n    redirectIfFound,\n}: {\n    redirectTo?: string;\n    redirectIfFound?: boolean;\n} = {}) {\n    const { data, error, mutate } = useSWR<User>('/api/user');\n    const loading = !data && !error;\n    const loggedOut: boolean = error && error.status === 401;\n\n    useEffect(() => {\n        if (!redirectTo || loading) return;\n        if (\n            // If redirectTo is set, redirect if the user was not found.\n            (redirectTo && !redirectIfFound && loggedOut) ||\n            // If redirectIfFound is also set, redirect if the user was found\n            (redirectIfFound && !loggedOut)\n        ) {\n            Router.push(redirectTo);\n        }\n    }, [redirectTo, redirectIfFound, loading, loggedOut]);\n\n    return { user: data, loggedOut, loading, mutate };\n}\n"]}