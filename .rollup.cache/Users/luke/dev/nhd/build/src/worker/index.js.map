{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/worker/index.ts"],"names":[],"mappings":";AAAA,OAAO,SAAS,CAAC;AACjB,OAAO,QAAQ,MAAM,eAAe,CAAC;AACrC,OAAO,MAAM,MAAM,YAAY,CAAC;AAChC,OAAO,eAAe,MAAM,yBAAyB,CAAC;AAEtD,IAAI,UAAU,GAAG,KAAK,CAAC;AAEvB;;GAEG;AACH,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE;;;;;gBAC9B,IAAI,UAAU,EAAE;oBACZ,mDAAmD;oBACnD,sBAAO;iBACV;;;;gBAGG,UAAU,GAAG,IAAI,CAAC;gBAClB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,qBAAM,eAAe,EAAE,EAAA;;gBAAvB,SAAuB,CAAC;;;;gBAExB,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;gBACjB,MAAM,CAAC,gBAAgB,CAAC,GAAC,CAAC,CAAC;;;gBAG/B,UAAU,GAAG,KAAK,CAAC;;;;KACtB,CAAC,CAAC","sourcesContent":["import './setup';\nimport schedule from 'node-schedule';\nimport Sentry from 'lib/sentry';\nimport processSchedule from './jobs/process-schedule';\n\nlet processing = false;\n\n/**\n * Every 10 seconds we'll run this job unless busy.\n */\nschedule.scheduleJob('* * * * *', async () => {\n    if (processing) {\n        // skip scheduling another task when one is running\n        return;\n    }\n\n    try {\n        processing = true;\n        console.log('Starting job.');\n        await processSchedule();\n    } catch (e) {\n        console.error(e);\n        Sentry.captureException(e);\n    }\n\n    processing = false;\n});\n"]}