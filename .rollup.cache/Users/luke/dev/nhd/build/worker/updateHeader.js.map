{"version":3,"file":"updateHeader.js","sourceRoot":"","sources":["../../worker/updateHeader.js"],"names":[],"mappings":";AAAA,OAAO,OAAO,MAAM,oBAAoB,CAAC;AACzC,OAAO,MAAM,MAAM,mBAAmB,CAAC;AACvC,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EACH,UAAU,EACV,cAAc,EACd,WAAW,EACX,iBAAiB,EACjB,KAAK,EACR,MAAM,kBAAkB,CAAC;AAE1B,IAAM,SAAS,GAAG,mIAAmI,CAAC;AAEtJ,MAAM,CAAC,OAAO,UAAgB,YAAY,CAAC,IAAI;;;;;;oBAC/B,MAAM,GAAyB,IAAI,GAA7B,EAAE,KAAK,GAAkB,IAAI,MAAtB,EAAE,WAAW,GAAK,IAAI,YAAT,CAAU;;;;oBAM3B,qBAAM,cAAc,EAAE,EAAA;;oBAAjC,QAAQ,GAAG,SAAsB;oBAEvC,CAAG,KAAK,GAAc,QAAQ,MAAtB,EAAK,IAAI,UAAK,QAAQ,EAA7B,SAAkB,CAAF,CAAc,CAAC;;;;oBAEhC,MAAM,KAAK,CAAC,WAAW,CAAC,CAAC;;oBAK7B,IAAI;wBACA,OAAO,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;qBAC7C;oBAAC,OAAO,CAAC,EAAE,GAAE;;;;oBAGV,qBAAM,OAAO,CAAC,IAAI,CAAC,+BAA+B,EAAE;4BAChD,MAAM,EAAE,KAAK;yBAChB,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;;oBAEH,IAAI,GAAC,CAAC,MAAM,EAAE;wBACH,KAAK,GAAI,GAAC,CAAC,MAAM,GAAZ,CAAa;wBAEzB,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,EAAE;4BACb,KAAK,GAAG,IAAI,IAAI,CAClB,GAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAC9C,CAAC;4BAEI,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;4BACpC,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;4BAE5B,MAAM,SAAS,CAAC;yBACnB;wBAED,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,EAAE;4BACnB,MAAM,KAAK,CAAC,cAAc,CAAC,CAAC;yBAC/B;wBAED,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,EAAE;4BACnB,MAAM,KAAK,CAAC,iBAAiB,CAAC,CAAC;yBAClC;qBACJ;oBAED,mDAAmD;oBACnD,qDAAqD;oBACrD,kDAAkD;oBAClD,sEAAsE;oBACtE,kCAAkC;oBAClC,IAAI,GAAC,CAAC,IAAI,KAAK,YAAY,IAAI,GAAC,CAAC,IAAI,KAAK,cAAc,IAAI,GAAC,CAAC,OAAO,KAAK,SAAS,EAAE;wBACjF,MAAM,KAAK,CAAC,cAAc,CAAC,CAAC;qBAC/B;oBAED,OAAO,CAAC,KAAK,CACT,yDAAkD,MAAM,MAAG,CAC9D,CAAC;oBAEF,MAAM,GAAC,CAAC;wBAGZ,qBAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;wBACvB,KAAK,EAAE;4BACH,MAAM,QAAA;yBACT;wBACD,MAAM,eACC,IAAI,CACV;wBACD,MAAM,aACF,MAAM,QAAA,IACH,IAAI,CACV;qBACJ,CAAC,EAAA;;oBAXF,SAWE,CAAC;;;;;CACN","sourcesContent":["import Twitter from '../src/lib/twitter';\nimport prisma from '../src/lib/prisma';\nimport getRandomPhoto from './getRandomPhoto';\nimport {\n    RATE_LIMIT,\n    DISABLED_TOKEN,\n    IMAGE_ERROR,\n    SUSPENDED_ACCOUNT,\n    error\n} from '../src/lib/error';\n\nconst PARSE_MSG = 'invalid json response body at https://api.twitter.com/1.1/account/update_profile_banner.json reason: Unexpected end of JSON input';\n\nexport default async function updateHeader(user) {\n    const { id: userId, token, tokenSecret } = user;\n\n    // image is base64\n    let image, info;\n\n    try {\n        const response = await getRandomPhoto();\n\n        ({ image, ...info } = response);\n    } catch (e) {\n        throw error(IMAGE_ERROR);\n    }\n\n    let twitter;\n\n    try {\n        twitter = new Twitter(token, tokenSecret);\n    } catch (e) {}\n\n    try {\n        await twitter.post('account/update_profile_banner', {\n            banner: image\n        });\n    } catch (e) {\n        if (e.errors) {\n            const [first] = e.errors;\n\n            if (first.code === 88) {\n                const reset = new Date(\n                    e._headers.get('x-rate-limit-reset') * 1000\n                );\n\n                const rateLimit = error(RATE_LIMIT);\n                rateLimit.nextReset = reset;\n\n                throw rateLimit;\n            }\n\n            if (first.code === 89) {\n                throw error(DISABLED_TOKEN);\n            }\n\n            if (first.code === 64) {\n                throw error(SUSPENDED_ACCOUNT); \n            }\n        }\n        \n        // @TODO(lukebro): twitter-lite just doesn't handle\n        // whatever response when app permissions are revoked\n        // and an update_profile_banner request is made...\n        // for now... we'll just pretend all fetch errors (error parsing json)\n        // will be when token is disabled.\n        if (e.name === 'FetchError' && e.type === 'invalid-json' && e.message === PARSE_MSG) {\n            throw error(DISABLED_TOKEN);\n        }\n\n        console.error(\n            `Could not update Twitter profile image of user ${userId}.`\n        );\n\n        throw e;\n    }\n\n    await prisma.header.upsert({\n        where: {\n            userId\n        },\n        update: {\n            ...info\n        },\n        create: {\n            userId,\n            ...info\n        }\n    });\n}\n"]}